- name: Cloning  oh-my-zsh
  git:
    repo: "https://github.com/robbyrussell/oh-my-zsh"
    update: no
    dest: "{{ ansible_user_dir}}/.oh-my-zsh"
  register: oh_my_zsh_cloning


- name: create .zshrc from oh-my-zsh templates
  copy:
    src: "{{ ansible_user_dir }}/.oh-my-zsh/templates/zshrc.zsh-template"
    dest: "{{ ansible_user_dir }}/.zshrc"
  when: oh_my_zsh_cloning|changed

- block:
    - name: check if /home/Downloads is mounted as tmpfs
      shell: df | grep "Downloads"
  rescue:
    - name: delete contents of /home/Downloads
      command: rm -rf {{ansible_user_dir}}/Downloads

- name: create symlink from /home/Downloads to $HOME/Downloads
  file: src=/home/Downloads dest="{{ ansible_user_dir}}/Downloads" state=link

- block:
    - name: check if vagrant libvirt is installed
      shell: vagrant plugin list | grep libvirt
  rescue:
    - name: install vagrant-libvirt plugin
      shell: vagrant plugin install vagrant-libvirt

- name: install nvm
  git:
    repo: https://github.com/creationix/nvm.git
    dest: "{{ ansible_user_dir}}/.nvm"
    version: "{{ nvm.version }}"
  tags: nvm

- name: source nvm in ~/.profile
  lineinfile: >
    dest="{{ansible_user_dir}}/.profile"
    line=". ~/.nvm/nvm.sh"
    create=yes
  tags: nvm

- block:
    - name: check if {{ nvm.node_version}} exists
      shell: source ~/.profile && nvm list | grep {{ nvm.node_version }}
      args:
        executable: /bin/bash
  rescue:
    - name: install {{ nvm.node_version }}
      shell: source ~/.profile && nvm install {{ nvm.node_version }}
      args:
        executable: /bin/bash
  tags: nvm

- name: install coffeescript, bower in global dir
  npm:
    name: "{{item}}"
    global: "yes"
    executable: "{{ ansible_user_dir}}/.nvm/versions/node/{{ nvm.node_version }}/bin/npm"
  with_items:
    - bower
    - coffee-script
  tags: nvm

- name: install vim settings
  git:
    repo: https://github.com/skamithi/vim_home
    dest: "{{ ansible_user_dir }}/.vim"
    recursive: yes
  ignore_errors: yes
  tags: vim_settings
