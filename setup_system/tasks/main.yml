- name: install virtualization related apps
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - virt-manager
    - virt-viewer
    - qemu-kvm
    - libvirt-bin
    - wireshark
    - libguestfs-tools
    - python-setuptools

- name: install general tools
  apt: pkg={{ item }}
  with_items:
    - iotop
    - build-essential
    - git-buildpackage
    - python-software-properties
    - software-properties-common
    - tree
    - htop
    - zsh
    - ruby-dev
    - libvirt-dev
    - unzip

- name: install desktop related tools
  apt: pkg={{ item }}
  with_items:
    - gimp
    - inkscape
    - gip
    - revelation
    - zsh
    - vim-nox
    - blueman
    - pencil

- name: install pip using easy_install
  command: easy_install pip creates=/usr/local/bin/pip

- name: install netshow
  pip: name=netshow-linux-lib

- name: set zsh as the default shell for users in the user_list var
  user: name={{ item }} shell=/bin/zsh
  items: user_list

- block:
    - name: check if Atom deb is installed
      apt: name=atom state=present
  rescue:
    - name: download latest version of Atom
      get_url: url=https://atom.io/download/deb dest=/tmp
      register: url_result
    - name: install Atom deb
      apt: deb="{{ url_result.dest }}"

- block:
    - name: check if Vagrant deb is installed
      shell: dpkg -l  | grep vagrant
  rescue:
    - name: download latest vagrant
      get_url:
        url: "https://releases.hashicorp.com/vagrant/{{ vagrant_version}}/vagrant_{{ vagrant_version }}_x86_64.deb"
        dest: /tmp
      register: vagrant_download
    - name: install vagrant deb
      apt: deb="{{ vagrant_download.dest }}" state=present

- block:
    - name: check if packer is installed
      file: path="/opt/packer/packer" state=file
  rescue:
    - name: download packer file
      get_url:
        url: "https://releases.hashicorp.com/packer/{{ packer_version}}/packer_{{ packer_version }}_linux_amd64.zip"
        dest: /tmp
      register: packer_zip

    - name: create packer home directory
      file: path=/opt/packer state=directory mode=0755

    - name: unarchive packer file
      unarchive:
        src: "{{ packer_zip.dest }}"
        dest: "/opt/packer/"

- name: create a symlink for the packer executable
  file: src=/opt/packer/packer dest=/usr/local/bin/packer state=link
